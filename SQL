1.MySQL的默认数据库：
默认数据库分类：
information_schema
performance_schema
mysql
test
informance_schema
保存了MySQl服务所有数据库的信息。
具体MySQL服务有多少个数据库，各个数据库有哪些表，各个表中的字段是什么数据类型，各个表中有哪些索引，各个数据库要什么权限才能访问。
mysql
保存MySQL的权限、参数、对象和状态信息。
如哪些user可以访问这个数据、DB参数、插件、主从
performance_schema
主要用于收集数据库服务器性能参数
提供进程等待的详细信息，包括锁、互斥变量、文件信息；
保存历史的事件汇总信息，为提供MySQL服务器性能做出详细的判断；
对于新增和删除监控事件点都非常容易，并可以随意改变mysql服务器的监控周期，例如（CYCLE、MICROSECOND）
test
内容为空


2.MySQL的测试注射

SQL注入攻击指由数据输入插入的部分或者整个SQL查询语句，插入的语句也可能是由客户端传送至网络应用程序的。成功的SQL注入攻击可以从数据库读取敏感数据、修改数据库数据（插入/更新/删除）、在数据库上执行管理员操作（如关闭数据库管理系统等）、恢复数据库管理文件系统上指定的文件或者写入新文件、甚至向操作系统发送命令。SQL注入攻击是一种典型的注入攻击，SQL命令被插入数据平面输入中，以达到影响已定义的SQL命令的作用。
通常网络应用程序构造SQL语句的方法是将程序员定义的SQL语法和用户的输入结合在一起。如下所示：
select title, text from news where id=$id
在上面这个例子中变量$id包含用户的输入数据，但是剩余的部分是程序猿定义的静态SQL语句部分；整个结合在一起组成动态SQL语句。
因为这种构造方式，用户可以构造输入使原SQL语句的执行操作范围超出用户选择的操作范围。下面的例子列举了用户输入“10 or 1=1”的情况，改变了原SQL语句的逻辑：通过添加“or 1=1”修改了WHERE条件语句。
select title, text from news where id=10 or 1=1
SQL注入攻击可以分为以下三类：
Inband：数据与插入的代码从同一渠道获取。这是最直接的一种攻击，返回的数据直接显示在网页中。
Out-of-band:数据从不同的渠道返回（如通过e-mail将查询结果发送给测试者）。
Inferential or Blind：这种情况没有实际的数据传送，但是测试者可以通过发送特定的请求并观察数据库服务器的响应情况重构信息。
成功SQL注入攻击要求攻击者根据语法构造正确的SQL查询语句。如果应用程序返回了不正确语法的查询语句的错误信息，那么攻击者较容易重构原查询语句的逻辑信息，进而，知道如何进行准确的注入。但是，如果应用程序隐藏了详细的错误信息，那么测试者就必须逆向源查询逻辑。
